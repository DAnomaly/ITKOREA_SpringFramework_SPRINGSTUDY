DBCP을 활용한 간단게시판 작성

1. web.xml에 아래 태그를 추가한다. (인코딩)
	<!-- 인코딩 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

2. porm.xml 최신화를 진행한다.
	>> SRPING : 5.1.4.RELEASE
 
3. ojdbc6.jar
   * 아래 2가지 중 한 가지만 사용한다.
   1) pom.xml 디펜던시 추가하기
	<repositories>
		<repository>
			<id>oracle</id>
			<name>Oracle JDBC Repository</name>
			<url>https://maven.jahia.org/maven2</url>
		</repository>
	</repositories>
	<dependencies>
		<!-- ojdbc6.jar -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>12.1.0.2</version>
		</dependency>
	</dependencies>

	2) tomcat\lib 디렉터리에 ojdbc6.jar 추가하기
		2-1)
		'\apache-tomcat-8.5.65\lib' 에 ojdbc6.jar 추가
		2-2)
		'\apache-tomcat-8.5.65\conf\context.xml' 에 <Resource> 태그 추가
		<!-- oracle xe -->
		<Resource
			name="jdbc/oracle"
			type="javax.sql.DataSource"
			driverClassName="oracle.jdbc.OracleDriver"
			url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
			username="spring"
			password="1111"
			maxTotal="8"
			maxIdle="2"
			maxWaitMillis="5000">
		2-3)
		기존에 Spring(Eclipse)에 추가된 Server가 있다면 삭제 후 다시 생성
